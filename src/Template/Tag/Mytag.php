<?php
namespace Pluf\Template\Tag;

/**
 * Custom tag example.
 */
class Pluf_Template_Tag_Mytag extends \Pluf\Template\Tag
{

    /**
     * Perform some operations at the opening of the
     * tag {mytag 'param1', 'param2'}.
     *
     * You can access the template context through
     * $this->context
     */
    function start ($param1, $param2)
    {
        echo 'start of tag mytag:<br />';
        echo '$this->context[mytag]: ' . $this->context->get('mytag') . '<br />';
    }

    /**
     * Generate some valid PHP code to be put in the template.
     *
     * The code generated by this function is included in the
     * template just after the call to $this->start() if the start()
     * method is implemented.
     *
     * You cannot access the template context but you can write
     * code that is modifying it through $t
     */
    function genStart ()
    {
        return '$t->set(\'mytag\', \'hello world!\');';
    }

    /**
     * Perform some operations at the closing of the
     * tag {/mytag 'param1'}.
     *
     * You can access the template context through
     * $this->context
     */
    function end ($param1)
    {
        echo 'end of tag mytag:<br />';
        echo '$this->context[mytag]: ' . $this->context->get('mytag') . '<br />';
    }

    /**
     * Generate some valid PHP code to be put in the template.
     *
     * The code generated by this function is included in the
     * template just after the call to $this->end() if the end()
     * method is implemented.
     *
     * You cannot access the template context but you can write
     * code that is modifying it through $t
     */
    function genEnd ()
    {
        // Cleaning :)
        return '$t->set(\'mytag\', \'\');';
    }
}